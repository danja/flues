{"version":3,"file":"index-DNcml30B.js","sources":["../../src/audio/AlgorithmRegistry.js","../../src/audio/DisynEngine.js","../../../shared/ui/KnobControl.js","../../../shared/ui/KeyboardInput.js","../../../shared/midi/MidiInputManager.js","../../src/ui/AppView.js","../../src/main.js"],"sourcesContent":["const clamp01 = (value) => Math.min(Math.max(value, 0), 1);\n\nconst expoMap = (value, min, max) => {\n  const clamped = clamp01(value);\n  return min * Math.pow(max / min, clamped);\n};\n\nexport const ALGORITHMS = [\n  {\n    id: 'bandLimitedPulse',\n    label: 'Dirichlet Pulse',\n    description: 'Band-limited pulse derived from the Dirichlet kernel with harmonic roll-off.',\n    params: [\n      {\n        id: 'harmonics',\n        label: 'Harmonics',\n        unit: 'count',\n        default: 0.6,\n        mapValue: (v) => Math.max(1, Math.round(1 + clamp01(v) * 63)),\n        format: (v) => `${v}`,\n      },\n      {\n        id: 'tilt',\n        label: 'Tilt',\n        unit: 'dB/oct',\n        default: 0.35,\n        mapValue: (v) => -3 + clamp01(v) * 18,\n        format: (v) => `${v.toFixed(1)}`,\n      },\n    ],\n  },\n  {\n    id: 'dsfSingleSided',\n    label: 'Single-Sided DSF',\n    description: 'Moorer discrete summation formula with variable inharmonic ratio.',\n    params: [\n      {\n        id: 'decay',\n        label: 'Decay',\n        unit: 'a',\n        default: 0.45,\n        mapValue: (v) => clamp01(v) * 0.98,\n        format: (v) => v.toFixed(2),\n      },\n      {\n        id: 'ratio',\n        label: 'Ratio',\n        unit: 'θ/ω',\n        default: 0.5,\n        mapValue: (v) => expoMap(v, 0.5, 4),\n        format: (v) => v.toFixed(2),\n      },\n    ],\n  },\n  {\n    id: 'dsfDoubleSided',\n    label: 'Double-Sided DSF',\n    description: 'Moorer DSF generating symmetric sidebands above and below the carrier.',\n    params: [\n      {\n        id: 'decay',\n        label: 'Decay',\n        unit: 'a',\n        default: 0.55,\n        mapValue: (v) => clamp01(v) * 0.96,\n        format: (v) => v.toFixed(2),\n      },\n      {\n        id: 'ratio',\n        label: 'Spread',\n        unit: 'θ/ω',\n        default: 0.6,\n        mapValue: (v) => expoMap(v, 0.5, 4.5),\n        format: (v) => v.toFixed(2),\n      },\n    ],\n  },\n  {\n    id: 'tanhSquare',\n    label: 'Tanh Square',\n    description: 'Hyperbolic tangent waveshaping of a sinusoidal carrier.',\n    params: [\n      {\n        id: 'drive',\n        label: 'Drive',\n        unit: 'index',\n        default: 0.55,\n        mapValue: (v) => expoMap(v, 0.05, 5),\n        format: (v) => v.toFixed(2),\n      },\n      {\n        id: 'trim',\n        label: 'Trim',\n        unit: 'gain',\n        default: 0.5,\n        mapValue: (v) => expoMap(v, 0.2, 1.2),\n        format: (v) => v.toFixed(2),\n      },\n    ],\n  },\n  {\n    id: 'tanhSaw',\n    label: 'Tanh Saw',\n    description: 'Square-to-saw transformation using heterodyned cosine blend.',\n    params: [\n      {\n        id: 'drive',\n        label: 'Drive',\n        unit: 'index',\n        default: 0.6,\n        mapValue: (v) => expoMap(v, 0.05, 4.5),\n        format: (v) => v.toFixed(2),\n      },\n      {\n        id: 'blend',\n        label: 'Blend',\n        unit: '%',\n        default: 0.4,\n        mapValue: (v) => clamp01(v),\n        format: (v) => `${Math.round(v * 100)}`,\n      },\n    ],\n  },\n  {\n    id: 'paf',\n    label: 'Phase-Aligned Formant',\n    description: 'PAF oscillator with configurable formant position and bandwidth.',\n    params: [\n      {\n        id: 'formant',\n        label: 'Formant',\n        unit: '×f0',\n        default: 0.5,\n        mapValue: (v) => expoMap(v, 0.5, 6),\n        format: (v) => v.toFixed(2),\n      },\n      {\n        id: 'bandwidth',\n        label: 'Bandwidth',\n        unit: 'Hz',\n        default: 0.3,\n        mapValue: (v) => expoMap(v, 50, 3000),\n        format: (v) => Math.round(v),\n      },\n    ],\n  },\n  {\n    id: 'modFm',\n    label: 'Modified FM',\n    description: 'Modified FM with exponential modulator and smooth spectra.',\n    params: [\n      {\n        id: 'index',\n        label: 'Index',\n        unit: 'k',\n        default: 0.5,\n        mapValue: (v) => expoMap(v, 0.01, 8),\n        format: (v) => v.toFixed(2),\n      },\n      {\n        id: 'ratio',\n        label: 'Ratio',\n        unit: 'c:m',\n        default: 0.4,\n        mapValue: (v) => expoMap(v, 0.25, 6),\n        format: (v) => v.toFixed(2),\n      },\n    ],\n  },\n];\n\nexport const DEFAULT_ALGORITHM_ID = 'tanhSquare';\n\nexport function getAlgorithmById(id) {\n  return ALGORITHMS.find((alg) => alg.id === id) ?? ALGORITHMS[0];\n}\n\nexport function getDefaultParamState(algorithmId = DEFAULT_ALGORITHM_ID) {\n  const algorithm = getAlgorithmById(algorithmId);\n  const params = {};\n\n  algorithm.params.forEach((param) => {\n    params[param.id] = clamp01(param.default);\n  });\n\n  return params;\n}\n\nexport function resolveParamValue(algorithmId, paramId, normalizedValue) {\n  const algorithm = getAlgorithmById(algorithmId);\n  const definition = algorithm.params.find((param) => param.id === paramId);\n  if (!definition) {\n    throw new Error(`[AlgorithmRegistry] Unknown param ${paramId} for ${algorithmId}`);\n  }\n  const clamped = clamp01(normalizedValue);\n  const mapped = definition.mapValue(clamped);\n  return {\n    normalized: clamped,\n    mapped,\n    formatted: definition.format(mapped),\n  };\n}\n","import { getAlgorithmById, getDefaultParamState, resolveParamValue, DEFAULT_ALGORITHM_ID } from './AlgorithmRegistry.js';\n\nexport class DisynEngine {\n  constructor({\n    onStateChange = () => {},\n    onError = (err) => console.error('[DisynEngine] Error:', err),\n  } = {}) {\n    this.audioContext = null;\n    this.node = null;\n    this.currentAlgorithmId = DEFAULT_ALGORITHM_ID;\n    this.paramState = getDefaultParamState();\n    this.envelope = { attack: 0.2, release: 0.4 };\n    this.reverb = { size: 0.5, level: 0.3 };\n    this.masterGain = 0.8;\n    this.onStateChange = onStateChange;\n    this.onError = onError;\n    this.ready = false;\n    this.pendingMessages = [];\n  }\n\n  async initialize() {\n    if (this.ready) return;\n\n    try {\n      const ctx = new (window.AudioContext || window.webkitAudioContext)();\n      this.audioContext = ctx;\n\n      await ctx.audioWorklet.addModule(new URL('./disyn-worklet.js', import.meta.url));\n\n      const node = new AudioWorkletNode(ctx, 'disyn-processor', {\n        numberOfInputs: 0,\n        numberOfOutputs: 1,\n        outputChannelCount: [2],\n      });\n\n      node.port.onmessage = (event) => this.handleWorkletMessage(event.data);\n      node.onprocessorerror = (error) => this.onError(error);\n\n      node.connect(ctx.destination);\n\n      this.node = node;\n      this.ready = true;\n\n      this.postStateToWorklet({\n        type: 'init',\n        sampleRate: ctx.sampleRate,\n        algorithmId: this.currentAlgorithmId,\n        params: this.getResolvedParams(),\n        envelope: this.envelope,\n        reverb: this.reverb,\n        master: this.masterGain,\n      });\n\n      this.flushPendingMessages();\n      this.notifyState();\n    } catch (error) {\n      this.onError(error);\n    }\n  }\n\n  async ensureRunning() {\n    if (!this.audioContext) {\n      await this.initialize();\n    }\n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n      this.notifyState();\n    }\n  }\n\n  suspend() {\n    if (!this.audioContext) return;\n    if (this.audioContext.state !== 'closed') {\n      this.audioContext.suspend().then(() => this.notifyState());\n    }\n  }\n\n  setMasterGain(value) {\n    this.masterGain = Math.min(Math.max(value, 0), 1);\n    this.postStateToWorklet({ type: 'master', value: this.masterGain });\n  }\n\n  setEnvelope({ attack, release }) {\n    if (typeof attack === 'number') {\n      this.envelope.attack = attack;\n    }\n    if (typeof release === 'number') {\n      this.envelope.release = release;\n    }\n    this.postStateToWorklet({ type: 'envelope', value: this.envelope });\n  }\n\n  setReverb({ size, level }) {\n    if (typeof size === 'number') {\n      this.reverb.size = size;\n    }\n    if (typeof level === 'number') {\n      this.reverb.level = level;\n    }\n    this.postStateToWorklet({ type: 'reverb', value: this.reverb });\n  }\n\n  setAlgorithm(algorithmId) {\n    const algorithm = getAlgorithmById(algorithmId);\n    this.currentAlgorithmId = algorithm.id;\n    this.paramState = getDefaultParamState(algorithm.id);\n    this.postStateToWorklet({\n      type: 'algorithm',\n      id: this.currentAlgorithmId,\n      params: this.getResolvedParams(),\n    });\n    this.notifyState();\n  }\n\n  setAlgorithmParam(paramId, normalizedValue) {\n    this.paramState[paramId] = Math.min(Math.max(normalizedValue, 0), 1);\n    this.postStateToWorklet({\n      type: 'param',\n      id: paramId,\n      value: this.getResolvedParam(paramId),\n    });\n  }\n\n  noteOn({ midi, frequency, velocity = 1 }) {\n    if (!this.ready) return;\n    this.postStateToWorklet({\n      type: 'noteOn',\n      midi,\n      frequency,\n      velocity,\n      time: this.audioContext.currentTime,\n    });\n  }\n\n  noteOff({ midi }) {\n    if (!this.ready) return;\n    this.postStateToWorklet({\n      type: 'noteOff',\n      midi,\n      time: this.audioContext.currentTime,\n    });\n  }\n\n  handleWorkletMessage(message) {\n    if (message?.type === 'log') {\n      console.log('[DisynWorklet]', message.data);\n    } else if (message?.type === 'error') {\n      this.onError(new Error(message.message));\n    }\n  }\n\n  postStateToWorklet(message) {\n    if (!this.node) {\n      this.pendingMessages.push(message);\n      return;\n    }\n    this.node.port.postMessage(message);\n  }\n\n  flushPendingMessages() {\n    if (!this.node || this.pendingMessages.length === 0) return;\n    this.pendingMessages.forEach((msg) => this.node.port.postMessage(msg));\n    this.pendingMessages.length = 0;\n  }\n\n  getResolvedParams() {\n    const algorithm = getAlgorithmById(this.currentAlgorithmId);\n    const result = {};\n    algorithm.params.forEach((param) => {\n      const normalized = this.paramState[param.id] ?? param.default ?? 0;\n      result[param.id] = resolveParamValue(algorithm.id, param.id, normalized);\n    });\n    return result;\n  }\n\n  getResolvedParam(paramId) {\n    return resolveParamValue(this.currentAlgorithmId, paramId, this.paramState[paramId] ?? 0);\n  }\n\n  notifyState() {\n    this.onStateChange({\n      contextState: this.audioContext?.state ?? 'pending',\n      algorithmId: this.currentAlgorithmId,\n      params: this.getResolvedParams(),\n      envelope: this.envelope,\n      reverb: this.reverb,\n      masterGain: this.masterGain,\n    });\n  }\n}\n","// KnobControl.js\n// Generic rotary knob interaction handler with mouse/touch support.\n\nexport class KnobControl {\n    constructor({\n        element,\n        valueElement,\n        onInput,\n        min = 0,\n        max = 100,\n        initial = 50,\n        bipolar = false,\n        sensitivity = 0.5,\n        resetValue = null,\n        formatDisplay = null,\n    }) {\n        if (!element || typeof onInput !== 'function') {\n            throw new Error('[KnobControl] element and onInput callback are required');\n        }\n\n        this.element = element;\n        this.valueElement = valueElement || null;\n        this.onInput = onInput;\n        this.min = min;\n        this.max = max;\n        this.value = this._clamp(initial);\n        this.bipolar = bipolar;\n        this.sensitivity = sensitivity;\n        this.resetValue = resetValue ?? (min + max) / 2;\n        this.formatDisplay = typeof formatDisplay === 'function' ? formatDisplay : null;\n\n        this._dragging = false;\n        this._startY = 0;\n        this._startValue = this.value;\n\n        this._bindEvents();\n        this._render();\n    }\n\n    _clamp(value) {\n        return Math.min(Math.max(value, this.min), this.max);\n    }\n\n    _normalized() {\n        if (this.max === this.min) return 0;\n        return (this.value - this.min) / (this.max - this.min);\n    }\n\n    _bindEvents() {\n        const startDrag = (clientY) => {\n            this._dragging = true;\n            this._startY = clientY;\n            this._startValue = this.value;\n        };\n\n        const updateDrag = (clientY) => {\n            if (!this._dragging) return;\n            const delta = (this._startY - clientY) * this.sensitivity;\n            this.value = this._clamp(this._startValue + delta);\n            this._render();\n            this.onInput(this._normalized(), this.value);\n        };\n\n        const endDrag = () => {\n            this._dragging = false;\n        };\n\n        this.element.addEventListener('mousedown', (event) => {\n            event.preventDefault();\n            startDrag(event.clientY);\n        });\n\n        document.addEventListener('mousemove', (event) => {\n            updateDrag(event.clientY);\n        });\n\n        document.addEventListener('mouseup', endDrag);\n\n        this.element.addEventListener('touchstart', (event) => {\n            if (event.touches.length === 0) return;\n            const touch = event.touches[0];\n            event.preventDefault();\n            startDrag(touch.clientY);\n        }, { passive: false });\n\n        document.addEventListener('touchmove', (event) => {\n            if (event.touches.length === 0) return;\n            const touch = event.touches[0];\n            updateDrag(touch.clientY);\n        }, { passive: false });\n\n        document.addEventListener('touchend', endDrag, { passive: true });\n\n        this.element.addEventListener('dblclick', () => {\n            this.setValue(this.resetValue);\n        });\n    }\n\n    _render() {\n        const rotation = this._normalized() * 270 - 135;\n        this.element.style.transform = `rotate(${rotation}deg)`;\n\n        if (this.valueElement) {\n            if (this.formatDisplay) {\n                this.valueElement.textContent = this.formatDisplay(this._normalized(), this.value);\n            } else if (this.bipolar) {\n                const midpoint = (this.min + this.max) / 2;\n                const bipolarValue = Math.round(this.value - midpoint);\n                this.valueElement.textContent = bipolarValue >= 0 ? `+${bipolarValue}` : `${bipolarValue}`;\n            } else {\n                this.valueElement.textContent = Math.round(this.value);\n            }\n        }\n    }\n\n    setValue(value, { emit = true } = {}) {\n        this.value = this._clamp(value);\n        this._render();\n        if (emit) {\n            this.onInput(this._normalized(), this.value);\n        }\n    }\n\n    setNormalized(value, { emit = true } = {}) {\n        const clamped = Math.min(Math.max(value, 0), 1);\n        const absolute = this.min + clamped * (this.max - this.min);\n        this.setValue(absolute, { emit });\n    }\n}\n","// KeyboardInput.js\n// Responsive on-screen + computer keyboard handler with MIDI-aware utilities.\n\nconst NOTE_NAMES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n\nconst DEFAULT_KEY_MAP = {\n    a: 0,\n    w: 1,\n    s: 2,\n    e: 3,\n    d: 4,\n    f: 5,\n    t: 6,\n    g: 7,\n    y: 8,\n    h: 9,\n    u: 10,\n    j: 11,\n    k: 12,\n    o: 13,\n    l: 14,\n    p: 15,\n    ';': 16,\n    \"'\": 17,\n    ']': 18,\n    z: 19,\n    x: 20,\n    c: 21,\n    v: 22,\n    b: 23,\n    n: 24,\n};\n\nexport class KeyboardInput {\n    constructor({\n        container,\n        onNoteOn,\n        onNoteOff,\n        baseMidiNote = 60, // Middle C (C4)\n        keyMap = DEFAULT_KEY_MAP,\n        velocity = 1,\n    }) {\n        if (!container) {\n            throw new Error('[KeyboardInput] container element is required');\n        }\n\n        if (typeof onNoteOn !== 'function' || typeof onNoteOff !== 'function') {\n            throw new Error('[KeyboardInput] onNoteOn and onNoteOff callbacks are required');\n        }\n\n        this.container = container;\n        this.onNoteOn = onNoteOn;\n        this.onNoteOff = onNoteOff;\n        this.baseMidiNote = baseMidiNote;\n        this.keyMap = keyMap;\n        this.velocity = velocity;\n\n        this.activeNotes = new Set();\n        this.pointerNotes = new Map();\n        this.container.style.touchAction = 'none';\n\n        this._bindPointerEvents();\n        this._bindKeyboardEvents();\n    }\n\n    static midiToFrequency(midiNote) {\n        return 440 * Math.pow(2, (midiNote - 69) / 12);\n    }\n\n    static midiToName(midiNote) {\n        const note = NOTE_NAMES[midiNote % 12];\n        const octave = Math.floor(midiNote / 12) - 1;\n        return `${note}${octave}`;\n    }\n\n    static nameToMidi(noteName) {\n        const match = /^([A-Ga-g])([#b]?)(-?\\d+)$/.exec(noteName);\n        if (!match) return null;\n\n        const [, base, accidental, octaveStr] = match;\n        const octave = parseInt(octaveStr, 10);\n\n        const normalizedBase = base.toUpperCase();\n        let index = NOTE_NAMES.findIndex((n) => n.startsWith(normalizedBase));\n        if (index < 0) return null;\n\n        if (accidental === '#') {\n            index = (index + 1) % 12;\n        } else if (accidental === 'b') {\n            index = (index + 11) % 12;\n        }\n\n        return index + (octave + 1) * 12;\n    }\n\n    _bindPointerEvents() {\n        this._onPointerDown = (event) => {\n            const key = this._findKeyFromEvent(event);\n            if (!key) return;\n            event.preventDefault();\n            this._triggerNoteOn(key.midi);\n            this.pointerNotes.set(event.pointerId, key.midi);\n        };\n\n        this._onPointerMove = (event) => {\n            if (!this.pointerNotes.has(event.pointerId)) return;\n            const key = this._findKeyFromEvent(event);\n            const currentMidi = this.pointerNotes.get(event.pointerId);\n\n            if (!key) {\n                if (currentMidi !== null && currentMidi !== undefined) {\n                    this._triggerNoteOff(currentMidi);\n                }\n                this.pointerNotes.set(event.pointerId, null);\n                return;\n            }\n\n            if (key.midi === currentMidi) return;\n\n            if (currentMidi !== null && currentMidi !== undefined) {\n                this._triggerNoteOff(currentMidi);\n            }\n            this._triggerNoteOn(key.midi);\n            this.pointerNotes.set(event.pointerId, key.midi);\n        };\n\n        this._onPointerUp = (event) => {\n            const midi = this.pointerNotes.get(event.pointerId);\n            if (midi !== undefined && midi !== null) {\n                this._triggerNoteOff(midi);\n            }\n            this.pointerNotes.delete(event.pointerId);\n        };\n\n        this._onPointerCancel = (event) => {\n            const midi = this.pointerNotes.get(event.pointerId);\n            if (midi !== undefined && midi !== null) {\n                this._triggerNoteOff(midi);\n            }\n            this.pointerNotes.delete(event.pointerId);\n        };\n\n        this._onContextMenu = (event) => {\n            event.preventDefault();\n        };\n\n        this.container.addEventListener('pointerdown', this._onPointerDown);\n        window.addEventListener('pointermove', this._onPointerMove);\n        window.addEventListener('pointerup', this._onPointerUp);\n        window.addEventListener('pointercancel', this._onPointerCancel);\n        this.container.addEventListener('contextmenu', this._onContextMenu);\n    }\n\n    _bindKeyboardEvents() {\n        this._onKeyDown = (event) => {\n            const offset = this.keyMap[event.key.toLowerCase()];\n            if (offset === undefined) return;\n            event.preventDefault();\n            event.stopPropagation();\n            const midi = this.baseMidiNote + offset;\n            if (!this.activeNotes.has(midi)) {\n                this._triggerNoteOn(midi);\n            }\n        };\n\n        this._onKeyUp = (event) => {\n            const offset = this.keyMap[event.key.toLowerCase()];\n            if (offset === undefined) return;\n            event.preventDefault();\n            event.stopPropagation();\n            const midi = this.baseMidiNote + offset;\n            this._triggerNoteOff(midi);\n        };\n\n        document.addEventListener('keydown', this._onKeyDown);\n        document.addEventListener('keyup', this._onKeyUp);\n    }\n\n    _findKeyFromEvent(event) {\n        const target = event.target.closest('[data-midi], [data-note]');\n        if (!target || !this.container.contains(target)) {\n            return null;\n        }\n\n        const identifier = target.dataset.midi ?? target.dataset.note;\n        const midi = this._resolveMidi(identifier);\n        if (midi === null) {\n            return null;\n        }\n\n        return { midi };\n    }\n\n    _resolveMidi(identifier) {\n        if (identifier === undefined) return null;\n        if (identifier === null) return null;\n\n        if (typeof identifier === 'number') {\n            return identifier;\n        }\n\n        if (/^\\d+$/.test(identifier)) {\n            return parseInt(identifier, 10);\n        }\n\n        return KeyboardInput.nameToMidi(identifier);\n    }\n\n    _press(identifier) {\n        const midi = this._resolveMidi(identifier);\n        if (midi === null || this.activeNotes.has(midi)) {\n            return;\n        }\n        this._triggerNoteOn(midi);\n    }\n\n    _release(identifier) {\n        const midi = this._resolveMidi(identifier);\n        if (midi === null) {\n            return;\n        }\n        this._triggerNoteOff(midi);\n    }\n\n    _triggerNoteOn(midi) {\n        this.activeNotes.add(midi);\n        this._setKeyActiveClass(midi, true);\n\n        const payload = {\n            midi,\n            name: KeyboardInput.midiToName(midi),\n            frequency: KeyboardInput.midiToFrequency(midi),\n            velocity: this.velocity,\n        };\n\n        try {\n            this.onNoteOn(payload);\n        } catch (error) {\n            console.error('[KeyboardInput] onNoteOn callback failure', error);\n        }\n    }\n\n    _triggerNoteOff(midi) {\n        if (!this.activeNotes.has(midi)) return;\n\n        this.activeNotes.delete(midi);\n        this._setKeyActiveClass(midi, false);\n\n        const payload = {\n            midi,\n            name: KeyboardInput.midiToName(midi),\n        };\n\n        try {\n            this.onNoteOff(payload);\n        } catch (error) {\n            console.error('[KeyboardInput] onNoteOff callback failure', error);\n        }\n    }\n\n    _setKeyActiveClass(midi, active) {\n        const name = KeyboardInput.midiToName(midi);\n        const selector = `[data-midi=\"${midi}\"], [data-note=\"${name}\"]`;\n        const keyEl = this.container.querySelector(selector);\n        if (keyEl) {\n            keyEl.classList.toggle('active', active);\n        }\n    }\n\n    releaseAll() {\n        [...this.activeNotes].forEach((midi) => this._triggerNoteOff(midi));\n        this.pointerNotes.clear();\n    }\n\n    destroy() {\n        this.releaseAll();\n        if (this._onPointerDown) {\n            this.container.removeEventListener('pointerdown', this._onPointerDown);\n            window.removeEventListener('pointermove', this._onPointerMove);\n            window.removeEventListener('pointerup', this._onPointerUp);\n            window.removeEventListener('pointercancel', this._onPointerCancel);\n            this.container.removeEventListener('contextmenu', this._onContextMenu);\n        }\n\n        if (this._onKeyDown) {\n            document.removeEventListener('keydown', this._onKeyDown);\n            document.removeEventListener('keyup', this._onKeyUp);\n        }\n    }\n}\n","// MidiInputManager.js\n// Thin wrapper around the Web MIDI API providing note events + device tracking.\n\nexport class MidiInputManager {\n    constructor({\n        onNoteOn,\n        onNoteOff,\n        onControlChange = null,\n        onActivity = null,\n    } = {}) {\n        this.onNoteOn = typeof onNoteOn === 'function' ? onNoteOn : null;\n        this.onNoteOff = typeof onNoteOff === 'function' ? onNoteOff : null;\n        this.onControlChange = typeof onControlChange === 'function' ? onControlChange : null;\n        this.onActivity = typeof onActivity === 'function' ? onActivity : null;\n\n        this.midiAccess = null;\n        this.selectedInput = null;\n        this.selectedChannel = 'all';\n        this.enabled = true;\n        this.activeNotes = new Map();\n        this.onDeviceChange = null;\n    }\n\n    async initialize() {\n        if (!navigator.requestMIDIAccess) {\n            console.warn('[MidiInputManager] Web MIDI API not available');\n            return false;\n        }\n\n        try {\n            this.midiAccess = await navigator.requestMIDIAccess();\n            this.midiAccess.onstatechange = (event) => {\n                if (typeof this.onDeviceChange === 'function') {\n                    this.onDeviceChange(this.listInputs());\n                }\n\n                if (event.port === this.selectedInput && event.port.state !== 'connected') {\n                    this._disconnectCurrentInput();\n                }\n            };\n\n            const inputs = this.listInputs();\n            if (inputs.length > 0) {\n                this.selectInput(inputs[0].id);\n            }\n\n            return true;\n        } catch (error) {\n            console.error('[MidiInputManager] Failed to initialize', error);\n            return false;\n        }\n    }\n\n    listInputs() {\n        if (!this.midiAccess) return [];\n\n        const devices = [];\n        for (const input of this.midiAccess.inputs.values()) {\n            devices.push({\n                id: input.id,\n                name: input.name || 'Unknown Device',\n                manufacturer: input.manufacturer || '',\n                state: input.state,\n            });\n        }\n        return devices;\n    }\n\n    selectInput(inputId) {\n        this._disconnectCurrentInput();\n\n        if (!inputId || !this.midiAccess) {\n            this.selectedInput = null;\n            return;\n        }\n\n        const input = this.midiAccess.inputs.get(inputId);\n        if (!input) {\n            console.warn(`[MidiInputManager] Input ${inputId} not found`);\n            return;\n        }\n\n        this.selectedInput = input;\n        this.selectedInput.onmidimessage = (event) => this._handleMessage(event);\n    }\n\n    _disconnectCurrentInput() {\n        if (this.selectedInput) {\n            this.selectedInput.onmidimessage = null;\n        }\n    }\n\n    setChannel(channel) {\n        if (channel === 'all') {\n            this.selectedChannel = 'all';\n            return;\n        }\n\n        const channelNumber = parseInt(channel, 10);\n        if (Number.isInteger(channelNumber) && channelNumber >= 1 && channelNumber <= 16) {\n            this.selectedChannel = channelNumber;\n        }\n    }\n\n    setEnabled(enabled) {\n        this.enabled = !!enabled;\n        if (!this.enabled) {\n            this._releaseAllNotes();\n        }\n    }\n\n    shutdown() {\n        this._releaseAllNotes();\n        this._disconnectCurrentInput();\n        this.selectedInput = null;\n    }\n\n    _handleMessage(event) {\n        if (!this.enabled) return;\n\n        const [status, data1, data2] = event.data;\n        const messageType = status & 0xf0;\n        const channel = (status & 0x0f) + 1;\n\n        if (this.selectedChannel !== 'all' && channel !== this.selectedChannel) {\n            return;\n        }\n\n        if (this.onActivity) {\n            this.onActivity({ messageType, channel });\n        }\n\n        switch (messageType) {\n            case 0x90: // Note on\n                if (data2 > 0) {\n                    this._handleNoteOn(data1, data2, channel);\n                } else {\n                    this._handleNoteOff(data1, channel);\n                }\n                break;\n\n            case 0x80: // Note off\n                this._handleNoteOff(data1, channel);\n                break;\n\n            case 0xb0: // Control change\n                if (this.onControlChange) {\n                    this.onControlChange({ controller: data1, value: data2, channel });\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    _handleNoteOn(midiNote, velocity, channel) {\n        const timestamp = performance.now();\n        this.activeNotes.set(midiNote, { velocity, channel, timestamp });\n\n        if (this.onNoteOn) {\n            const payload = {\n                midi: midiNote,\n                velocity: velocity / 127,\n                channel,\n                name: MidiInputManager.midiToName(midiNote),\n                frequency: MidiInputManager.midiToFrequency(midiNote),\n            };\n            try {\n                this.onNoteOn(payload);\n            } catch (error) {\n                console.error('[MidiInputManager] onNoteOn callback failed', error);\n            }\n        }\n    }\n\n    _handleNoteOff(midiNote, channel) {\n        const note = this.activeNotes.get(midiNote);\n        if (!note) return;\n        this.activeNotes.delete(midiNote);\n\n        if (this.onNoteOff) {\n            const payload = {\n                midi: midiNote,\n                channel,\n                name: MidiInputManager.midiToName(midiNote),\n            };\n            try {\n                this.onNoteOff(payload);\n            } catch (error) {\n                console.error('[MidiInputManager] onNoteOff callback failed', error);\n            }\n        }\n    }\n\n    _releaseAllNotes() {\n        for (const midiNote of this.activeNotes.keys()) {\n            this._handleNoteOff(midiNote, this.activeNotes.get(midiNote)?.channel ?? 'all');\n        }\n        this.activeNotes.clear();\n    }\n\n    static midiToFrequency(midiNote) {\n        return 440 * Math.pow(2, (midiNote - 69) / 12);\n    }\n\n    static midiToName(midiNote) {\n        const names = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n        const index = midiNote % 12;\n        const octave = Math.floor(midiNote / 12) - 1;\n        return `${names[index]}${octave}`;\n    }\n}\n\n","import { DisynEngine } from '../audio/DisynEngine.js';\nimport { ALGORITHMS, getAlgorithmById, getDefaultParamState, resolveParamValue, DEFAULT_ALGORITHM_ID } from '../audio/AlgorithmRegistry.js';\nimport { KnobControl } from '@shared/ui/KnobControl.js';\nimport { KeyboardInput } from '@shared/ui/KeyboardInput.js';\nimport { MidiInputManager } from '@shared/midi/MidiInputManager.js';\n\nconst formatSeconds = (seconds) => {\n  if (seconds < 0.01) {\n    return `${Math.round(seconds * 1000)}ms`;\n  }\n  if (seconds < 1) {\n    return `${(seconds * 1000).toFixed(0)}ms`;\n  }\n  return `${seconds.toFixed(2)}s`;\n};\n\nconst mapAttackSeconds = (normalized) => {\n  const min = 0.001;\n  const max = 1.0;\n  return min * Math.pow(max / min, normalized);\n};\n\nconst mapReleaseSeconds = (normalized) => {\n  const min = 0.01;\n  const max = 3.0;\n  return min * Math.pow(max / min, normalized);\n};\n\nconst LARGE_SCREEN_QUERY = '(min-width: 900px)';\nconst KEY_SEQUENCE = ['a', 'w', 's', 'e', 'd', 'f', 't', 'g', 'y', 'h', 'u', 'j', 'k', 'o', 'l', 'p', ';', \"'\", ']', 'z', 'x', 'c', 'v', 'b', 'n'];\n\nconst NOTE_PATTERN = [\n  { name: 'C', isBlack: false },\n  { name: 'C#', isBlack: true },\n  { name: 'D', isBlack: false },\n  { name: 'D#', isBlack: true },\n  { name: 'E', isBlack: false },\n  { name: 'F', isBlack: false },\n  { name: 'F#', isBlack: true },\n  { name: 'G', isBlack: false },\n  { name: 'G#', isBlack: true },\n  { name: 'A', isBlack: false },\n  { name: 'A#', isBlack: true },\n  { name: 'B', isBlack: false },\n];\n\nconst KEYBOARD_HORIZONTAL_PADDING = 18;\n\nexport class AppView {\n  constructor(container) {\n    this.container = container;\n    this.engineState = null;\n\n    this.engine = new DisynEngine({\n      onStateChange: (state) => this.handleEngineState(state),\n      onError: (error) => this.showError(error),\n    });\n\n    this.midi = new MidiInputManager({\n      onNoteOn: (payload) => this.handleNoteOn(payload),\n      onNoteOff: (payload) => this.handleNoteOff(payload),\n      onActivity: () => this.flashMidiActivity(),\n    });\n\n    this.algorithmKnobs = new Map();\n    this.envelopeKnobs = new Map();\n    this.reverbKnobs = new Map();\n\n    this.keyboardMedia = window.matchMedia(LARGE_SCREEN_QUERY);\n    this.currentOctaves = this.keyboardMedia.matches ? 2 : 1;\n    this.handleMediaChange = (event) => {\n      const octaves = event.matches ? 2 : 1;\n      this.updateKeyboardLayout(octaves);\n    };\n    this.handleResize = () => {\n      this.updateKeyboardLayout(this.currentOctaves);\n    };\n  }\n\n  mount() {\n    this.render();\n    this.setupAlgorithmControls();\n    this.setupEnvelopeControls();\n    this.setupReverbControls();\n    this.setupKeyboard();\n    this.setupPowerButton();\n    this.setupMidiControls();\n    this.keyboardMedia.addEventListener('change', this.handleMediaChange);\n    window.addEventListener('resize', this.handleResize);\n\n    // Prime UI with default algorithm settings\n    this.updateAlgorithmParams(DEFAULT_ALGORITHM_ID, getDefaultParamState());\n    this.updateStatusPill('pending');\n  }\n\n  render() {\n    this.container.innerHTML = `\n      <div class=\"app\">\n        <header class=\"app__header\">\n          <h1 class=\"app__title\">Disyn Distortion Synth</h1>\n          <div class=\"app__status\">\n            <span class=\"status-pill status-pill--off\" data-status-pill>Power Off</span>\n            <button class=\"power-button\" data-power>Power</button>\n          </div>\n        </header>\n\n        <section class=\"panel algorithm-panel\">\n          <h2 class=\"panel__title\">Oscillator Algorithms</h2>\n          <div class=\"algorithm-select\">\n            <div class=\"algorithm-select__control\">\n              <label for=\"algorithm-select\">Algorithm</label>\n              <select id=\"algorithm-select\" data-algorithm-select>\n                ${ALGORITHMS.map((alg) => `<option value=\"${alg.id}\">${alg.label}</option>`).join('')}\n              </select>\n            </div>\n            <p class=\"algorithm-select__description\" data-algorithm-description></p>\n          </div>\n          <div class=\"controls-grid\" data-algorithm-controls></div>\n        </section>\n\n        <section class=\"panel\">\n          <h2 class=\"panel__title\">Envelope & Reverb</h2>\n          <div class=\"controls-grid\">\n            <div data-envelope-controls class=\"controls-grid\"></div>\n            <div data-reverb-controls class=\"controls-grid\"></div>\n          </div>\n        </section>\n\n        <section class=\"panel\">\n          <h2 class=\"panel__title\">Keyboard & MIDI</h2>\n          <div class=\"keyboard\">\n            <div class=\"keyboard__keys\" data-keyboard-keys></div>\n            <div class=\"keyboard__legend\" data-keyboard-legend></div>\n          </div>\n          <div class=\"midi-status\">\n            <span class=\"status-pill status-pill--off\" data-midi-pill>MIDI Offline</span>\n            <div class=\"midi-status__devices\">\n              <label for=\"midi-devices\">Device</label>\n              <select id=\"midi-devices\" data-midi-select disabled>\n                <option>No Devices</option>\n              </select>\n            </div>\n            <label>\n              <input type=\"checkbox\" class=\"toggle\" data-midi-toggle checked />\n            </label>\n            <div class=\"midi-activity\" data-midi-activity></div>\n          </div>\n        </section>\n      </div>\n    `;\n  }\n\n  setupPowerButton() {\n    const powerButton = this.container.querySelector('[data-power]');\n    powerButton.addEventListener('click', async () => {\n      try {\n        if (!this.engine.audioContext || this.engine.audioContext.state === 'suspended') {\n          await this.engine.ensureRunning();\n        } else {\n          this.engine.suspend();\n        }\n      } catch (error) {\n        this.showError(error);\n      }\n    });\n  }\n\n  setupAlgorithmControls() {\n    this.algorithmSelect = this.container.querySelector('[data-algorithm-select]');\n    this.algorithmDescription = this.container.querySelector('[data-algorithm-description]');\n    this.algorithmControlsContainer = this.container.querySelector('[data-algorithm-controls]');\n\n    this.algorithmSelect.addEventListener('change', (event) => {\n      const algorithmId = event.target.value;\n      const algorithm = getAlgorithmById(algorithmId);\n      this.algorithmDescription.textContent = algorithm.description;\n      this.buildAlgorithmKnobs(algorithmId);\n      this.engine.setAlgorithm(algorithmId);\n    });\n\n    const defaultAlgorithm = getAlgorithmById(DEFAULT_ALGORITHM_ID);\n    this.algorithmDescription.textContent = defaultAlgorithm.description;\n    this.buildAlgorithmKnobs(DEFAULT_ALGORITHM_ID);\n  }\n\n  buildAlgorithmKnobs(algorithmId) {\n    this.algorithmControlsContainer.innerHTML = '';\n    this.algorithmKnobs.clear();\n\n    const algorithm = getAlgorithmById(algorithmId);\n    const defaultState = getDefaultParamState(algorithmId);\n\n    algorithm.params.forEach((param) => {\n      const knobElement = document.createElement('div');\n      knobElement.className = 'knob';\n      knobElement.innerHTML = `\n        <div class=\"knob__ring\"></div>\n        <div class=\"knob__label\">${param.label}</div>\n        <div class=\"knob__value\" data-value>-</div>\n      `;\n\n      this.algorithmControlsContainer.appendChild(knobElement);\n\n      const ring = knobElement.querySelector('.knob__ring');\n      const valueElement = knobElement.querySelector('[data-value]');\n      const normalized = defaultState[param.id] ?? param.default ?? 0.5;\n      const resolved = resolveParamValue(algorithmId, param.id, normalized);\n\n      valueElement.textContent = resolved.formatted;\n\n      const knobControl = new KnobControl({\n        element: ring,\n        valueElement,\n        initial: normalized * 100,\n        onInput: (value) => {\n          this.engine.setAlgorithmParam(param.id, value);\n        },\n        formatDisplay: (norm) => resolveParamValue(algorithmId, param.id, norm).formatted,\n      });\n\n      this.algorithmKnobs.set(param.id, { control: knobControl, valueElement });\n    });\n  }\n\n  setupEnvelopeControls() {\n    const container = this.container.querySelector('[data-envelope-controls]');\n    container.innerHTML = '';\n\n    const attack = this.createKnob({\n      label: 'Attack',\n      initial: 0.2,\n      format: (norm) => formatSeconds(mapAttackSeconds(norm)),\n      onChange: (value) => {\n        this.engine.setEnvelope({ attack: value });\n      },\n    });\n\n    const release = this.createKnob({\n      label: 'Release',\n      initial: 0.4,\n      format: (norm) => formatSeconds(mapReleaseSeconds(norm)),\n      onChange: (value) => {\n        this.engine.setEnvelope({ release: value });\n      },\n    });\n\n    container.appendChild(attack.element);\n    container.appendChild(release.element);\n\n    this.envelopeKnobs.set('attack', attack.control);\n    this.envelopeKnobs.set('release', release.control);\n  }\n\n  setupReverbControls() {\n    const container = this.container.querySelector('[data-reverb-controls]');\n    container.innerHTML = '';\n\n    const size = this.createKnob({\n      label: 'Room Size',\n      initial: 0.5,\n      format: (norm) => `${Math.round(norm * 100)}%`,\n      onChange: (value) => {\n        this.engine.setReverb({ size: value });\n      },\n    });\n\n    const level = this.createKnob({\n      label: 'Wet Level',\n      initial: 0.3,\n      format: (norm) => `${Math.round(norm * 100)}%`,\n      onChange: (value) => {\n        this.engine.setReverb({ level: value });\n      },\n    });\n\n    container.appendChild(size.element);\n    container.appendChild(level.element);\n\n    this.reverbKnobs.set('size', size.control);\n    this.reverbKnobs.set('level', level.control);\n  }\n\n  createKnob({ label, initial = 0.5, format, onChange }) {\n    const wrapper = document.createElement('div');\n    wrapper.className = 'knob';\n    wrapper.innerHTML = `\n      <div class=\"knob__ring\"></div>\n      <div class=\"knob__label\">${label}</div>\n      <div class=\"knob__value\">${format(initial)}</div>\n    `;\n\n    const ring = wrapper.querySelector('.knob__ring');\n    const valueElement = wrapper.querySelector('.knob__value');\n\n    const control = new KnobControl({\n      element: ring,\n      valueElement,\n      initial: initial * 100,\n      onInput: (normalized) => {\n        valueElement.textContent = format(normalized);\n        onChange(normalized);\n      },\n      formatDisplay: format,\n    });\n\n    return { element: wrapper, control };\n  }\n\n  setupKeyboard() {\n    this.keysContainer = this.container.querySelector('[data-keyboard-keys]');\n    this.keyboardLegend = this.container.querySelector('[data-keyboard-legend]');\n    this.updateKeyboardLayout(this.currentOctaves);\n  }\n\n  updateKeyboardLayout(octaves) {\n    this.currentOctaves = octaves;\n    if (!this.keysContainer) return;\n\n    const layout = this.generateKeyLayout(octaves);\n    this.renderKeyboardLayers(layout);\n    this.updateKeyboardLegend(octaves);\n    this.initializeKeyboardInput(octaves);\n  }\n\n  initializeKeyboardInput(octaves) {\n    if (this.keyboard && typeof this.keyboard.destroy === 'function') {\n      this.keyboard.destroy();\n    }\n\n    this.keyboard = new KeyboardInput({\n      container: this.keysContainer,\n      baseMidiNote: 60,\n      keyMap: this.getKeyMapForOctaves(octaves),\n      onNoteOn: (payload) => this.handleNoteOn(payload),\n      onNoteOff: (payload) => this.handleNoteOff(payload),\n    });\n  }\n\n  generateKeyLayout(octaves) {\n    const whiteKeys = [];\n    const blackKeys = [];\n\n    let midi = 60; // C4\n    let octave = 4;\n    let whiteIndex = 0;\n\n    for (let o = 0; o < octaves; o++) {\n      NOTE_PATTERN.forEach((step) => {\n        const noteName = `${step.name}${octave}`;\n        if (step.isBlack) {\n          blackKeys.push({\n            midi,\n            name: noteName,\n            precedingWhiteIndex: Math.max(whiteIndex - 1, 0),\n          });\n        } else {\n          whiteKeys.push({\n            midi,\n            name: noteName,\n            label: noteName,\n          });\n          whiteIndex += 1;\n        }\n        midi += 1;\n        if (!step.isBlack && step.name === 'B') {\n          octave += 1;\n        }\n      });\n    }\n\n    const topNoteName = `C${octave}`;\n    whiteKeys.push({\n      midi,\n      name: topNoteName,\n      label: topNoteName,\n    });\n\n    return {\n      whiteKeys,\n      blackKeys,\n    };\n  }\n\n  renderKeyboardLayers({ whiteKeys, blackKeys }) {\n    this.keysContainer.innerHTML = '';\n\n    const whiteLayer = document.createElement('div');\n    whiteLayer.className = 'keyboard__white-keys';\n\n    const whiteElements = whiteKeys.map((key) => {\n      const el = document.createElement('div');\n      el.className = 'key white';\n      el.dataset.midi = key.midi;\n      el.dataset.note = key.name;\n      el.innerHTML = `<span class=\"key__label\">${key.label}</span>`;\n      whiteLayer.appendChild(el);\n      return el;\n    });\n\n    this.keysContainer.appendChild(whiteLayer);\n\n    const whiteRects = whiteElements.map((el) => el.getBoundingClientRect());\n    const containerRect = this.keysContainer.getBoundingClientRect();\n    const paddingLeft = parseFloat(getComputedStyle(this.keysContainer).paddingLeft) || KEYBOARD_HORIZONTAL_PADDING;\n\n    const blackLayer = document.createElement('div');\n    blackLayer.className = 'keyboard__black-keys';\n\n    blackKeys.forEach((key) => {\n      const prevIndex = key.precedingWhiteIndex;\n      const nextIndex = prevIndex + 1;\n      const prevRect = whiteRects[prevIndex];\n      const nextRect = whiteRects[nextIndex];\n      if (!prevRect || !nextRect) return;\n\n      const el = document.createElement('div');\n      el.className = 'key black';\n      el.dataset.midi = key.midi;\n      el.dataset.note = key.name;\n\n      const center = (prevRect.right + nextRect.left) / 2;\n      const availableWidth = Math.min(prevRect.width, nextRect.width);\n      const keyWidth = Math.max(availableWidth * 0.6, 20);\n      const left = center - keyWidth / 2 - containerRect.left - paddingLeft;\n\n      el.style.width = `${keyWidth}px`;\n      el.style.left = `${left}px`;\n\n      blackLayer.appendChild(el);\n    });\n\n    this.keysContainer.appendChild(blackLayer);\n  }\n\n  updateKeyboardLegend(octaves) {\n    if (!this.keyboardLegend) return;\n    const totalNotes = octaves * 12 + 1;\n    const sequence = KEY_SEQUENCE.slice(0, totalNotes).map((key) => key.toUpperCase());\n\n    if (octaves === 1) {\n      this.keyboardLegend.textContent = sequence.join(' ');\n    } else {\n      const midpoint = Math.ceil(sequence.length / 2);\n      const firstRow = sequence.slice(0, midpoint).join(' ');\n      const secondRow = sequence.slice(midpoint).join(' ');\n      this.keyboardLegend.innerHTML = `${firstRow}<br>${secondRow}`;\n    }\n  }\n\n  getKeyMapForOctaves(octaves) {\n    const totalNotes = octaves * 12 + 1;\n    const map = {};\n    KEY_SEQUENCE.slice(0, totalNotes).forEach((key, index) => {\n      map[key] = index;\n    });\n    return map;\n  }\n\n  async handleNoteOn(payload) {\n    try {\n      await this.engine.ensureRunning();\n      this.engine.noteOn(payload);\n    } catch (error) {\n      this.showError(error);\n    }\n  }\n\n  handleNoteOff(payload) {\n    this.engine.noteOff(payload);\n  }\n\n  setupMidiControls() {\n    const midiToggle = this.container.querySelector('[data-midi-toggle]');\n    const midiSelect = this.container.querySelector('[data-midi-select]');\n    const midiPill = this.container.querySelector('[data-midi-pill]');\n\n    midiToggle.addEventListener('change', (event) => {\n      const enabled = event.target.checked;\n      this.midi.setEnabled(enabled);\n      this.updateMidiStatus(enabled);\n    });\n\n    midiSelect.addEventListener('change', (event) => {\n      const inputId = event.target.value;\n      this.midi.selectInput(inputId);\n    });\n\n    this.midi.onDeviceChange = (devices) => {\n      midiSelect.innerHTML = '';\n      if (devices.length === 0) {\n        midiSelect.innerHTML = '<option>No Devices</option>';\n        midiSelect.disabled = true;\n        return;\n      }\n\n      devices.forEach((device) => {\n        const option = document.createElement('option');\n        option.value = device.id;\n        option.textContent = `${device.name}`;\n        midiSelect.appendChild(option);\n      });\n      midiSelect.disabled = false;\n    };\n\n    this.initMidi().then((success) => {\n      midiPill.textContent = success ? 'MIDI Ready' : 'MIDI Unavailable';\n      midiPill.classList.toggle('status-pill--off', !success);\n      this.updateMidiStatus(success && midiToggle.checked);\n    });\n  }\n\n  async initMidi() {\n    const success = await this.midi.initialize();\n    return success;\n  }\n\n  updateMidiStatus(enabled) {\n    const midiPill = this.container.querySelector('[data-midi-pill]');\n    if (!midiPill) return;\n\n    if (enabled) {\n      midiPill.textContent = 'MIDI Active';\n      midiPill.classList.remove('status-pill--off');\n    } else {\n      midiPill.textContent = 'MIDI Muted';\n      midiPill.classList.add('status-pill--off');\n    }\n  }\n\n  flashMidiActivity() {\n    const dot = this.container.querySelector('[data-midi-activity]');\n    if (!dot) return;\n\n    dot.classList.add('midi-activity--on');\n    clearTimeout(this.midiActivityTimeout);\n    this.midiActivityTimeout = setTimeout(() => {\n      dot.classList.remove('midi-activity--on');\n    }, 150);\n  }\n\n  handleEngineState(state) {\n    this.engineState = state;\n    this.updateStatusPill(state.contextState);\n    this.updateAlgorithmState(state);\n  }\n\n  updateStatusPill(contextState) {\n    const pill = this.container.querySelector('[data-status-pill]');\n    if (!pill) return;\n\n    let text = 'Power Off';\n    let off = false;\n\n    switch (contextState) {\n      case 'running':\n        text = 'Audio Running';\n        off = false;\n        break;\n      case 'suspended':\n        text = 'Suspended';\n        off = true;\n        break;\n      case 'closed':\n        text = 'Closed';\n        off = true;\n        break;\n      default:\n        text = 'Ready';\n        off = true;\n    }\n\n    pill.textContent = text;\n    pill.classList.toggle('status-pill--off', off);\n  }\n\n  updateAlgorithmState(state) {\n    if (!state?.params) return;\n    const algorithm = getAlgorithmById(state.algorithmId);\n    algorithm.params.forEach((param) => {\n      const knob = this.algorithmKnobs.get(param.id);\n      if (!knob) return;\n\n      const resolved = state.params[param.id];\n      if (!resolved) return;\n\n      const normalized = resolved.normalized;\n      knob.control.setNormalized(normalized, { emit: false });\n    });\n  }\n\n  updateAlgorithmParams(algorithmId, params) {\n    const algorithm = getAlgorithmById(algorithmId);\n    algorithm.params.forEach((param) => {\n      const knob = this.algorithmKnobs.get(param.id);\n      if (!knob) return;\n      const normalized = params[param.id] ?? param.default ?? 0.5;\n      knob.control.setNormalized(normalized, { emit: false });\n    });\n  }\n\n  showError(error) {\n    console.error('[Disyn] Error', error);\n    window.dispatchEvent(new CustomEvent('disyn:error', { detail: error }));\n  }\n}\n","import './styles.css';\nimport { AppView } from './ui/AppView.js';\n\nconst bootstrap = () => {\n  const container = document.getElementById('app');\n  if (!container) {\n    throw new Error('[Disyn] #app container missing');\n  }\n\n  const app = new AppView(container);\n  app.mount();\n};\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n} else {\n  bootstrap();\n}\n\n"],"names":["clamp01","value","expoMap","min","max","clamped","ALGORITHMS","v","DEFAULT_ALGORITHM_ID","getAlgorithmById","id","alg","getDefaultParamState","algorithmId","algorithm","params","param","resolveParamValue","paramId","normalizedValue","definition","mapped","DisynEngine","onStateChange","onError","err","ctx","node","event","error","attack","release","size","level","midi","frequency","velocity","message","msg","result","normalized","KnobControl","element","valueElement","onInput","initial","bipolar","sensitivity","resetValue","formatDisplay","startDrag","clientY","updateDrag","delta","endDrag","touch","rotation","midpoint","bipolarValue","emit","absolute","NOTE_NAMES","DEFAULT_KEY_MAP","KeyboardInput","container","onNoteOn","onNoteOff","baseMidiNote","keyMap","midiNote","note","octave","noteName","match","base","accidental","octaveStr","normalizedBase","index","n","key","currentMidi","offset","target","identifier","payload","active","name","selector","keyEl","MidiInputManager","onControlChange","onActivity","inputs","devices","input","inputId","channel","channelNumber","enabled","status","data1","data2","messageType","timestamp","names","formatSeconds","seconds","mapAttackSeconds","mapReleaseSeconds","LARGE_SCREEN_QUERY","KEY_SEQUENCE","NOTE_PATTERN","KEYBOARD_HORIZONTAL_PADDING","AppView","state","octaves","defaultAlgorithm","defaultState","knobElement","ring","resolved","knobControl","norm","label","format","onChange","wrapper","control","layout","whiteKeys","blackKeys","whiteIndex","o","step","topNoteName","whiteLayer","whiteElements","el","whiteRects","containerRect","paddingLeft","blackLayer","prevIndex","nextIndex","prevRect","nextRect","center","availableWidth","keyWidth","left","totalNotes","sequence","firstRow","secondRow","map","midiToggle","midiSelect","midiPill","device","option","success","dot","contextState","pill","text","off","knob","bootstrap"],"mappings":"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"}