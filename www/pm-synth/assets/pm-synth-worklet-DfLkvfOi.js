class b{constructor(t=44100){this.sampleRate=t,this.dcLevel=.5,this.noiseLevel=.15,this.toneLevel=0,this.sawtoothPhase=0,this.sawtoothFrequency=440}setDCLevel(t){this.dcLevel=Math.max(0,Math.min(1,t))}setNoiseLevel(t){this.noiseLevel=Math.max(0,Math.min(1,t))}setToneLevel(t){this.toneLevel=Math.max(0,Math.min(1,t))}process(t){this.sawtoothFrequency=t;const e=this.dcLevel,i=(Math.random()*2-1)*this.noiseLevel,h=this.sawtoothFrequency/this.sampleRate;this.sawtoothPhase+=h,this.sawtoothPhase>=1&&(this.sawtoothPhase-=1);const s=(this.sawtoothPhase*2-1)*this.toneLevel;return e+i+s}reset(){this.sawtoothPhase=0}}class L{constructor(t=44100){this.sampleRate=t,this.attackTime=.01,this.releaseTime=.05,this.envelope=0,this.gate=!1,this.isActive=!1}setAttack(t){this.attackTime=.001*Math.pow(500,t)}setRelease(t){this.releaseTime=.01*Math.pow(200,t)}setGate(t){this.gate=t,t&&(this.isActive=!0)}process(){if(this.gate){const t=1/(this.attackTime*this.sampleRate);this.envelope+=t,this.envelope>1&&(this.envelope=1)}else{const t=1/(this.releaseTime*this.sampleRate);this.envelope-=t,this.envelope<0&&(this.envelope=0,this.isActive=!1)}return this.envelope}isPlaying(){return this.isActive}reset(){this.envelope=0,this.isActive=!0}}const r={PLUCK:0,HIT:1,REED:2,FLUTE:3,BRASS:4,BOW:5,BELL:6,DRUM:7};class P{constructor(){this.type=r.REED,this.intensity=.5,this.lastPeak=0,this.peakDecay=.999,this.prevInput=0,this.bowState=0,this.bellPhase=0,this.drumEnergy=0,this.TANH_CLIP_THRESHOLD=3,this.TANH_NUMERATOR_CONSTANT=27,this.TANH_DENOMINATOR_SCALE=9}setType(t){t>=r.PLUCK&&t<=r.BRASS&&(this.type=t)}setIntensity(t){this.intensity=Math.max(0,Math.min(1,t))}fastTanh(t){if(t>this.TANH_CLIP_THRESHOLD)return 1;if(t<-this.TANH_CLIP_THRESHOLD)return-1;const e=t*t;return t*(this.TANH_NUMERATOR_CONSTANT+e)/(this.TANH_NUMERATOR_CONSTANT+this.TANH_DENOMINATOR_SCALE*e)}processPluck(t){const e=.2+this.intensity*.45;let i;if(Math.abs(t)>Math.abs(this.lastPeak))this.lastPeak=t,i=t;else{this.lastPeak*=this.peakDecay;const h=(t-this.prevInput)*e,s=.35+(1-this.intensity)*.45;i=t*s+h}return this.prevInput=t,Math.max(-1,Math.min(1,i))}processHit(t){const e=2+this.intensity*8,i=Math.sin(t*e*Math.PI*.5),h=.35+this.intensity*.55,s=Math.sign(i)*Math.pow(Math.abs(i),h);return Math.max(-1,Math.min(1,s))}processReed(t){const e=2.5+this.intensity*10,i=(this.intensity-.5)*.25,h=(t+i)*e,s=this.fastTanh(h),a=.6+this.intensity*.5;return Math.max(-1,Math.min(1,s*a-i*.3))}processFlute(t){const e=.45+this.intensity*.4,i=(Math.random()*2-1)*this.intensity*.04,h=(t+i)*e,s=h-h*h*h*.35;return Math.max(-.49,Math.min(.49,s))}processBrass(t){const e=1.5+this.intensity*5;.4+this.intensity*.5;let i;if(t>=0){const s=t*e+(.2+this.intensity*.35);i=this.fastTanh(Math.max(s,0))}else{const s=-t*(e*(.4+this.intensity*.4));i=-Math.pow(Math.min(s,1.5),1.3)*(.35+(1-this.intensity)*.25)}const h=this.fastTanh(i*(1.2+this.intensity*1.5));return Math.max(-1,Math.min(1,h+this.intensity*.05))}processBow(t){const e=this.intensity*.9+.2,i=t-this.bowState,h=this.fastTanh(i*(6+this.intensity*12)),s=(Math.random()*2-1)*this.intensity*.012,a=h*(.55+this.intensity*.35)+i*.25+s,n=.8-this.intensity*.25;return this.bowState=this.bowState*n+(t+h*e*.05)*(1-n),Math.max(-1,Math.min(1,a))}processBell(t){this.bellPhase+=.1+this.intensity*.25,this.bellPhase>Math.PI*2&&(this.bellPhase-=Math.PI*2);const e=6+this.intensity*14,i=Math.sin(t*e+this.bellPhase)*(.4+this.intensity*.4),h=Math.sin(t*(e*.5+2))*(.2+this.intensity*.3),s=this.fastTanh((i+h)*(1.1+this.intensity*.6));return Math.max(-1,Math.min(1,s))}processDrum(t){const e=1.2+this.intensity*2.2,i=(Math.random()*2-1)*(.02+this.intensity*.06);this.drumEnergy=this.drumEnergy*(.7-this.intensity*.2)+Math.abs(t)*(.6+this.intensity*.7);const h=Math.tanh(t*e)+i,s=h*(.4+this.intensity*.4)+Math.sign(h)*Math.min(.8,this.drumEnergy*.6);return Math.max(-1,Math.min(1,s))}process(t){switch(this.type){case r.PLUCK:return this.processPluck(t);case r.HIT:return this.processHit(t);case r.REED:return this.processReed(t);case r.FLUTE:return this.processFlute(t);case r.BRASS:return this.processBrass(t);case r.BOW:return this.processBow(t);case r.BELL:return this.processBell(t);case r.DRUM:return this.processDrum(t);default:return t}}reset(){this.lastPeak=0,this.prevInput=0,this.bowState=0,this.bellPhase=0,this.drumEnergy=0}}class g{constructor(t=44100){this.sampleRate=t,this.maxDelayLength=Math.floor(t/20),this.delayLine1=new Float32Array(this.maxDelayLength),this.delayLine2=new Float32Array(this.maxDelayLength),this.writePos1=0,this.writePos2=0,this.tuningSemitones=0,this.ratio=1,this.delayLength1=1e3,this.delayLength2=1e3,this.frequency=440}setTuning(t){this.tuningSemitones=(t-.5)*24,this.frequency&&this.updateDelayLengths(this.frequency)}setRatio(t){t<.5?this.ratio=.5+t:this.ratio=1+(t-.5)*2,this.frequency&&this.updateDelayLengths(this.frequency)}updateDelayLengths(t){this.frequency=t;const e=Math.pow(2,this.tuningSemitones/12),i=t*e;this.delayLength1=Math.max(2,Math.min(this.sampleRate/i,this.maxDelayLength-1)),this.delayLength2=Math.max(2,Math.min(this.delayLength1*this.ratio,this.maxDelayLength-1))}process(t,e){e!==this.frequency&&this.updateDelayLengths(e);const h=(this.writePos1-this.delayLength1+this.maxDelayLength)%this.maxDelayLength,s=Math.floor(h),a=h-s,n=(s+1)%this.maxDelayLength,y=this.delayLine1[s]*(1-a)+this.delayLine1[n]*a,d=(this.writePos2-this.delayLength2+this.maxDelayLength)%this.maxDelayLength,o=Math.floor(d),u=d-o,f=(o+1)%this.maxDelayLength,m=this.delayLine2[o]*(1-u)+this.delayLine2[f]*u;return this.delayLine1[this.writePos1]=t,this.delayLine2[this.writePos2]=t,this.writePos1=(this.writePos1+1)%this.maxDelayLength,this.writePos2=(this.writePos2+1)%this.maxDelayLength,{delay1:y,delay2:m}}reset(){this.delayLine1.fill(0),this.delayLine2.fill(0),this.writePos1=0,this.writePos2=0;for(let t=0;t<Math.min(100,this.maxDelayLength);t++)this.delayLine1[t]=(Math.random()*2-1)*.01,this.delayLine2[t]=(Math.random()*2-1)*.01}}class w{constructor(){this.delay1Gain=.95,this.delay2Gain=.95,this.filterGain=0}setDelay1Gain(t){this.delay1Gain=t*.99}setDelay2Gain(t){this.delay2Gain=t*.99}setFilterGain(t){this.filterGain=t*.99}process(t,e,i){return t*this.delay1Gain+e*this.delay2Gain+i*this.filterGain}reset(){}}class D{constructor(t=44100){this.sampleRate=t,this.frequency=1e3,this.q=1,this.shape=0,this.low=0,this.band=0,this.high=0,this.prevLow=0,this.prevBand=0}setFrequency(t){this.frequency=20*Math.pow(1e3,t)}setQ(t){this.q=.5*Math.pow(40,t)}setShape(t){this.shape=Math.max(0,Math.min(1,t))}process(t){const e=2*Math.sin(Math.PI*this.frequency/this.sampleRate),i=1/Math.max(.5,this.q);this.low=this.low+e*this.band,this.high=t-this.low-i*this.band,this.band=e*this.high+this.band,isFinite(this.low)||(this.low=0),isFinite(this.band)||(this.band=0),isFinite(this.high)||(this.high=0);let h;if(this.shape<.5){const s=this.shape*2;h=this.low*(1-s)+this.band*s}else{const s=(this.shape-.5)*2;h=this.band*(1-s)+this.high*s}return h}reset(){this.low=0,this.band=0,this.high=0,this.prevLow=0,this.prevBand=0}}class v{constructor(t=44100){this.sampleRate=t,this.lfoFrequency=5,this.lfoPhase=0,this.typeLevel=.5,this.amDepth=0,this.fmDepth=0}setFrequency(t){this.lfoFrequency=.1*Math.pow(200,t)}setTypeLevel(t){this.typeLevel=Math.max(0,Math.min(1,t)),t<.5?(this.amDepth=(.5-t)*2,this.fmDepth=0):(this.amDepth=0,this.fmDepth=(t-.5)*2)}process(){const t=this.lfoFrequency*2*Math.PI/this.sampleRate;this.lfoPhase+=t,this.lfoPhase>2*Math.PI&&(this.lfoPhase-=2*Math.PI);const e=Math.sin(this.lfoPhase),i=1-this.amDepth*.5+e*this.amDepth*.5,h=1+e*this.fmDepth*.1;return{lfo:e,am:i,fm:h}}reset(){this.lfoPhase=0}}class k{constructor(t){this.sampleRate=t,this.size=.5,this.level=.3,this.combDelays=[Math.floor(.0297*t),Math.floor(.0371*t),Math.floor(.0411*t),Math.floor(.0437*t)],this.allpassDelays=[Math.floor(.005*t),Math.floor(.0017*t)],this.combBuffers=this.combDelays.map(e=>new Float32Array(e)),this.combIndices=new Array(this.combDelays.length).fill(0),this.allpassBuffers=this.allpassDelays.map(e=>new Float32Array(e)),this.allpassIndices=new Array(this.allpassDelays.length).fill(0)}setSize(t){this.size=Math.max(0,Math.min(1,t))}setLevel(t){this.level=Math.max(0,Math.min(1,t))}process(t){let e=0;const i=.7+this.size*.28;for(let s=0;s<this.combBuffers.length;s++){const a=this.combBuffers[s],n=this.combIndices[s],y=this.combDelays[s],c=a[n];a[n]=t+c*i,e+=c,this.combIndices[s]=(n+1)%y}let h=e/this.combBuffers.length;for(let s=0;s<this.allpassBuffers.length;s++){const a=this.allpassBuffers[s],n=this.allpassIndices[s],y=this.allpassDelays[s],c=a[n],d=.5,o=-h*d+c;a[n]=h+c*d,h=o,this.allpassIndices[s]=(n+1)%y}return t*(1-this.level)+h*this.level}reset(){this.combBuffers.forEach(t=>t.fill(0)),this.allpassBuffers.forEach(t=>t.fill(0)),this.combIndices.fill(0),this.allpassIndices.fill(0)}}const p=globalThis.sampleRate;class T extends AudioWorkletProcessor{constructor(){super(),this.sources=new b(p),this.envelope=new L(p),this.interface=new P,this.delayLines=new g(p),this.feedback=new w,this.filter=new D(p),this.modulation=new v(p),this.reverb=new k(p),this.frequency=440,this.gate=!1,this.isPlaying=!1,this.outputGain=.5,this.dcBlockerX1=0,this.dcBlockerY1=0,this.prevDelayOutputs={delay1:0,delay2:0},this.prevFilterOutput=0,this.port.onmessage=t=>{const{type:e,data:i}=t.data;switch(e){case"noteOn":this.noteOn(i.frequency);break;case"noteOff":this.noteOff();break;case"setParameter":this.setParameter(i.param,i.value);break}}}noteOn(t){this.frequency=t,this.gate=!0,this.isPlaying=!0,this.sources.reset(),this.envelope.reset(),this.interface.reset(),this.delayLines.reset(),this.feedback.reset(),this.filter.reset(),this.modulation.reset(),this.reverb.reset(),this.dcBlockerX1=0,this.dcBlockerY1=0,this.prevDelayOutputs.delay1=0,this.prevDelayOutputs.delay2=0,this.prevFilterOutput=0,this.envelope.setGate(!0)}noteOff(){this.gate=!1,this.envelope.setGate(!1)}setParameter(t,e){switch(t){case"dcLevel":this.sources.setDCLevel(e);break;case"noiseLevel":this.sources.setNoiseLevel(e);break;case"toneLevel":this.sources.setToneLevel(e);break;case"attack":this.envelope.setAttack(e);break;case"release":this.envelope.setRelease(e);break;case"interfaceType":this.interface.setType(e);break;case"interfaceIntensity":this.interface.setIntensity(e);break;case"tuning":this.delayLines.setTuning(e);break;case"ratio":this.delayLines.setRatio(e);break;case"delay1Feedback":this.feedback.setDelay1Gain(e);break;case"delay2Feedback":this.feedback.setDelay2Gain(e);break;case"filterFeedback":this.feedback.setFilterGain(e);break;case"filterFrequency":this.filter.setFrequency(e);break;case"filterQ":this.filter.setQ(e);break;case"filterShape":this.filter.setShape(e);break;case"lfoFrequency":this.modulation.setFrequency(e);break;case"modulationTypeLevel":this.modulation.setTypeLevel(e);break;case"reverbSize":this.reverb.setSize(e);break;case"reverbLevel":this.reverb.setLevel(e);break}}processSample(){if(!this.isPlaying)return 0;const t=this.modulation.process(),e=this.frequency*t.fm,i=this.sources.process(e),h=this.envelope.process(),s=i*h,a=this.interface.process(s),n=this.feedback.process(this.prevDelayOutputs.delay1,this.prevDelayOutputs.delay2,this.prevFilterOutput),y=a+n,c=this.dcBlock(y),d=Math.max(-1,Math.min(1,c)),o=this.delayLines.process(d,this.frequency),u=(o.delay1+o.delay2)*.5,f=this.filter.process(u),m=f*t.am*this.outputGain,M=this.reverb.process(m);return this.prevDelayOutputs.delay1=o.delay1,this.prevDelayOutputs.delay2=o.delay2,this.prevFilterOutput=f,!this.envelope.isPlaying()&&Math.abs(M)<1e-5&&Math.abs(this.prevDelayOutputs.delay1)<1e-5&&Math.abs(this.prevDelayOutputs.delay2)<1e-5&&(this.isPlaying=!1),M}dcBlock(t){const e=t-this.dcBlockerX1+.995*this.dcBlockerY1;return this.dcBlockerX1=t,this.dcBlockerY1=e,e}process(t,e,i){const s=e[0][0];for(let a=0;a<s.length;a++)s[a]=this.processSample();return!0}}registerProcessor("pm-synth-worklet",T);
